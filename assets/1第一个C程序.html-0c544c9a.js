import{_ as n,r as d,o as r,c as s,a as t,b as a,d as i,e as o}from"./app-1116f4bd.js";const l="/assets/images/C/NewProject.png",c="/assets/images/C/emptyFile.png",p="/assets/images/C/run.png",h="/assets/images/C/runend.png",u={},_=o('<h3 id="_1-搭建项目结构" tabindex="-1"><a class="header-anchor" href="#_1-搭建项目结构" aria-hidden="true">#</a> 1.搭建项目结构</h3><p>  完成环境配置后，我们就可以开始写第一个 C 程序了。<br>   首先打开 VS，选择创建一个新项目-&gt;创建空项目。这个时候就需要写我们的项目名称，为了方便管理，我推荐你写的项目文件都以数字开头。例如 001HelloWorld。<br>   接着选择项目的保存地址，同样的，建议在某个你熟悉的位置新建一个文件夹&quot;C 语言学习&quot;来保存你的所有项目，紧接着点击创建。<br>   如果一切顺利，你会看到如下页面:</p><figure><img src="'+l+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="_2-创建源程序" tabindex="-1"><a class="header-anchor" href="#_2-创建源程序" aria-hidden="true">#</a> 2.创建源程序</h3><p>  注意到我的目录树构件在左侧，你可以拖拽构件的标头部分来选择放到不同位置，拖拽到显现出的箭头上能精准放置。<br>   现在看向我们的目录树结构，里面有头文件源文件等，我们暂时不需要关注这些，只需要知道怎么创建 C 文件就好。<br>   在源程序分支上右击鼠标，选择添加-&gt;新建项(注意，大部分操作都是有快捷键的，你可以按照右侧显示的快捷键来快速操作)。<br>   此时我们要给新建的 C 文件命名，建议命名为 main.c 文件，没错，&quot;.&quot;后面的后缀名要改成 c。main 就是主要的意思，现阶段我们只需要在一个主程序中编写 C 程序即可。<br>   一切安好的话你的页面应该与此一致:<br><img src="'+c+`" alt="image" loading="lazy"></p><h3 id="_3-书写代码" tabindex="-1"><a class="header-anchor" href="#_3-书写代码" aria-hidden="true">#</a> 3.书写代码</h3><p>  好了，我们终于可以开始正式写第一个程序了。在你的文件中输入以下代码，回车(Enter)键换行：<br>   注意：所有符号都为英文，你最好一字不落一字不错的敲出来，如果你的页面冒出了许多波浪线那就意味着你敲错了，不用担心，觉得困难的话可以先把这段代码复制粘贴上去</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>  我们现在不需要关心这段代码什么意思，只需要知道，将来一段时间，我们写的大部分内容都将在这个{}之间(准确来说也得在 return 0;之前)。</p><p>  然后现在把光标移动到 return 0;的上面一行，在这一行书写以下这条语句，和 return 0;那行一样，切记在最后加上&quot;;&quot;号：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>  这行代码的意思就是向终端(稍后解释)输出 Hello World!这个字符串，我们的第一个 C 语言程序就书写完成啦！</p><p>  现在进行最后也是最重要的一步，点击如图中的那个空心绿色三角图标，我们的程序将会运行。</p><figure><img src="`+p+'" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="_4-运行第一个程序" tabindex="-1"><a class="header-anchor" href="#_4-运行第一个程序" aria-hidden="true">#</a> 4.运行第一个程序</h3><p>  接下来你会看到弹出一个黑色背景的框框，其中显示着一段文字信息，这就是我们刚才提到的终端，我们现阶段展示程序运行结果的方式就是终端显示。<br><img src="'+h+`" alt="image" loading="lazy"><br>   你会看到终端中显示了许多文字，其中第一行是我们程序输出的字符串---Hello World!，至于其他的信息目前也不需要关心，那是系统执行完程序都会自动输出的。现在你也可以按照提示输入任意键关闭终端。</p><p>  看到这里，你难道就没有疑问吗？你没有，我都有了！</p><h4 id="_1-我们写了这么多行代码-最后就为了输出几个字符-还不如直接手写" tabindex="-1"><a class="header-anchor" href="#_1-我们写了这么多行代码-最后就为了输出几个字符-还不如直接手写" aria-hidden="true">#</a> 1.我们写了这么多行代码，最后就为了输出几个字符，还不如直接手写！</h4><p>  很遗憾，我们的这个示例程序并不能体现出计算机的优势，但你现在应当知道，快速、重复是计算机的两大专长。我们也许现在为了输出这行 HelloWorld 做了很多事情，但以后你会发现只需要写几行代码，就可以在瞬间写出一百行一万行 HelloWorld 或者做出类似的事情。</p><h4 id="_2-我感觉对整个程序运行没有概念-它是怎么打印出-hello-world-的-以及怎么做其他事情" tabindex="-1"><a class="header-anchor" href="#_2-我感觉对整个程序运行没有概念-它是怎么打印出-hello-world-的-以及怎么做其他事情" aria-hidden="true">#</a> 2.我感觉对整个程序运行没有概念，它是怎么打印出 Hello World!的，以及怎么做其他事情？</h4><p>  程序就是由一行行代码构成的，每一行代码都有其固定的作用，我们先是写出其简单框架 #inc...turn 0;} ，这个框架代码以后我们会经常写出，然后写出了一条语句：printf(&quot;Hello World!\\n&quot;);，这个 printf(&quot;...&quot;);是 c 语言提供给我们作终端打印的一个方法，它会在终端中输出&quot;&quot;中的字符。所以你也可以在其中写上其他东西，修改后 Ctrl+S 保存并点击绿三角运行，就能看到一样的效果。</p><h4 id="_3-在-符号中末尾还有-n-两个字符-为什么打印出来没有呢" tabindex="-1"><a class="header-anchor" href="#_3-在-符号中末尾还有-n-两个字符-为什么打印出来没有呢" aria-hidden="true">#</a> 3.在&quot;&quot;符号中末尾还有\\n 两个字符，为什么打印出来没有呢？</h4><p>  &#39;\\n&#39;在 C 语言中有着特殊作用，它与其他某些字母结合具有特殊功能，就比如&#39;\\n&#39;是换行的意思，如果你去掉\\n 运行，你就会发现少了一个空行！当然，这个东西有自己的名字，叫做转义字符，类似的转义字符我现在可以先列出一些供你尝试( 有些可能因为代码太简单了看不到效果 )：</p><table><thead><tr><th>转义字符</th><th>意义</th><th>ASCII 码值（十进制）</th></tr></thead><tbody><tr><td>\\a</td><td>响铃(BEL)</td><td>007</td></tr><tr><td>\\b</td><td>退格(BS) ，将当前位置移到前一列</td><td>008</td></tr><tr><td>\\f</td><td>换页(FF)，将当前位置移到下页开头</td><td>012</td></tr><tr><td>\\n</td><td>换行(LF) ，将当前位置移到下一行开头</td><td>010</td></tr><tr><td>\\r</td><td>回车(CR) ，将当前位置移到本行开头</td><td>013</td></tr><tr><td>\\t</td><td>水平制表(HT) （跳到下一个 TAB 位置）</td><td>009</td></tr><tr><td>\\v</td><td>垂直制表(VT)</td><td>011</td></tr><tr><td>\\</td><td>代表一个反斜线字符&#39;&#39;&#39;</td><td>092</td></tr><tr><td>\\&#39;</td><td>代表一个单引号（撇号）字符</td><td>039</td></tr><tr><td>\\&quot;</td><td>代表一个双引号字符</td><td>034</td></tr><tr><td>\\?</td><td>代表一个问号</td><td>063</td></tr><tr><td>\\0</td><td>空字符(NUL)</td><td>000</td></tr><tr><td>\\ddd</td><td>1 到 3 位八进制数所代表的任意字符</td><td>三位八进制</td></tr><tr><td>\\xhh</td><td>十六进制所代表的任意字符</td><td>十六进制</td></tr></tbody></table><h4 id="_4-就这-然后呢" tabindex="-1"><a class="header-anchor" href="#_4-就这-然后呢" aria-hidden="true">#</a> 4.就这？然后呢？</h4><p>  前言中我就已经说过，我建议你主动去做，主动去对知识点进行拓展，例如现在你可以做这几件事：</p><pre><code>1. 我想输出多行不同内容该怎么办？
2. 如果我并没有按照模板编写程序会怎么样？例如少一个分号或者把语句写到其他地方...
3. 我可以用*和空格在终端显示一个爱心吗，甚至只用一行printf!
4. ...
</code></pre><h4 id="结束-下一节" tabindex="-1"><a class="header-anchor" href="#结束-下一节" aria-hidden="true">#</a> 结束，下一节！</h4>`,28),m={href:"https://www.zhihu.com/question/431432363/answer/1646288276",target:"_blank",rel:"noopener noreferrer"},g=t("h2",{id:"后续更新中",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#后续更新中","aria-hidden":"true"},"#"),a(" 后续更新中......")],-1);function b(f,v){const e=d("ExternalLinkIcon");return r(),s("div",null,[_,t("p",null,[a("有趣链接："),t("a",m,[a('为什么我们第一个程序要打印"Hello World!"?'),i(e)])]),g])}const x=n(u,[["render",b],["__file","1第一个C程序.html.vue"]]);export{x as default};
